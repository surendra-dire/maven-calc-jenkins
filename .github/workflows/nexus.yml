# .github/workflows/build.yml
name: Build

on:
  workflow_dispatch:
  
env:

  NEXUS_URL: ${{ secrets.NEXUS_URL }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

  //MAVEN_REPO_PATH: ${{ secrets.MAVEN_REPO_PATH || 'repository/maven-releases' }}

  
jobs:
  build:
    runs-on: [self-hosted, Windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build with Maven
        run: mvn clean install

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/*.jar

     # Set up JFrog CLI (this installs & configures it)
      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: latest
        env:
          JF_URL: ${{ secrets.JFROG_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}

      # Check repository version snapshot or release from pom.xml
      - name: Get version info
        id: version-info
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Project version: $VERSION"
          
          if [[ $VERSION == *-SNAPSHOT ]]; then
            echo "version_type=snapshot" >> $GITHUB_OUTPUT
            echo "nexus_repo=snapshots" >> $GITHUB_OUTPUT
          else
            echo "version_type=release" >> $GITHUB_OUTPUT
            echo "nexus_repo=releases" >> $GITHUB_OUTPUT
          fi
      #  Deploy to appropriate Nexus repository
      - name: Deploy to Nexus
        run: |
          echo "Deploying to Nexus repository: ${{ steps.version-info.outputs.nexus_repo }}"
          
          # Use Maven deploy with alternate deployment repository
          mvn deploy -DskipTests \
            -DaltDeploymentRepository=nexus::default::http://192.168.178.94:8082/repository/Calc-maven-hosted-repo/
        env:
          NEXUS_URL: ${{ secrets.NEXUS_URL }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      
